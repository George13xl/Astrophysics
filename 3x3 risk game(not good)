#include <stdio.h>
#include<time.h>

srand(time(NULL));
char pa[4],player[3][3],one,two;
    int end=1,i,j,soldier[3][3],many,x,roll1,roll2;
	int def_sq1=0,def_sq2=0,def_sq3=0,def_sq4=0;
	
	
//dice(1-6)
int dice(void){
	while(1){
		x=(rand())%10;
		if(x==1 || x==2 || x==3 || x==4 || x==5 || x==6) break;
	}
	return x;
}

/* this makes the starting grid*/
void makestart(char player[3][3],int soldier[3][3]){
    int i,j;
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            player[i][j]='0';
            soldier[i][j]=0;
        }
    }
    player[0][2]='R';
    player[2][0]='G';
    soldier[0][2]=3;
    soldier[2][0]=3;
}

/*this prints the game grid at its current state*/
void printon (char player[3][3],int soldier[3][3]){
    int i,j;
    for (i=0;i<3;i++){
        printf("|");
        for(j=0;j<3;j++){
            printf(" %c%3d |", player[i][j] ,soldier[i][j]);
        }
        if(i<2){
        printf("\n----------------------\n");
        }
    }
    printf("\n");
}
/*converts uppercase to lowercase*/
char lowercase(char c){
    if(c>='a' && c<='z'){
        return c;
    }
    else if(c>='A' && c<='Z'){
        return c-('A'-'a');
    }
}

	void ask(void) {
        while(1){
            makestart(player,soldier);
            printon(player,soldier);
            printf("Do you want to repeat?\n");
            scanf("%s",pa);
            for(i=0;i<2;i++){
                pa[i]=lowercase(pa[i]);
            }
            if(pa[0]=='n' && pa[1]=='o'){
                break;
            }
        }
    }

// ups all troops by 1 	
void nextround(void){
	int a,b;
	for(a=0;a<3;a++){
        for(b=0;b<3;b++){
            if(soldier[a][b]!=0){
				soldier[a][b]+=1;
			}
        }
    }
}
//gives you the squers you can attack
void nextsquare(int c){
	def_sq1=0,def_sq2=0,def_sq3=0,def_sq4=0;
	switch(c){
		case 1:
			def_sq1=2;
			def_sq2=4;
			break;
		case 2:
			def_sq1=1;
			def_sq2=3;
			def_sq3=5;
			break;
		case 3:
			def_sq1=2;
			def_sq2=6;
			break;
		case 4:
			def_sq1=1;
			def_sq2=5;
			def_sq3=7;
			break;
		case 5:
			def_sq1=2;
			def_sq2=4;
			def_sq3=6;
			def_sq4=8;
			break;
		case 6:
			def_sq1=3;
			def_sq2=5;
			def_sq3=9;
			break;
		case 7:
			def_sq1=4;
			def_sq2=8;
			break;
		case 8:
			def_sq1=5;
			def_sq2=7;
			def_sq3=9;
			break;
		case 9:
			def_sq1=6;
			def_sq2=8;
			break;	
		default:
			printf("error\n");
	}
}

//converts the num of squer to grid numb(i,j)
void convert(int val){
	switch(val){
		case 1:
			i=0,j=0;
			break;
		case 2:
			i=0,j=1;
			break;
		case 3:
			i=0,j=2;
			break;
		case 4:
			i=1,j=0;
			break;
		case 5:
			i=1,j=1;
			break;
		case 6:
			i=1,j=2;
			break;
		case 7:
			i=2,j=0;
			break;
		case 8:
			i=2,j=1;
			break;
		case 9:
			i=2,j=2;
			break;	
		default:
			printf("error2\n");
	}
}

//attack mechanism
void attack(void){
	int of,df;
	do{
	printf("from which square do you want to attack?(num from 1-9):\n");
	scanf("%d",&of);
	}while(of<1 || of>9);
	nextsquare(of);
	do{
		printf("The squers you can attack are %d-%d-%d-%d\nWhich one you choose?\n",def_sq1,def_sq2,def_sq3,def_sq4);
		scanf("%d",&df);
	}while(df!=0 &&( df!=def_sq1 && df!=def_sq2 && df!=def_sq3 && df!=def_sq4));
	convert(of);
	one=player[i][j];
	convert(df);
	two=player[i][j];
	if(soldier[i][j]==0){
		do{
		printf("how many would you like to move to that squere?\n");
		scanf("%d",&many);
		}while(many<0);
		soldier[i][j]=many;
		convert(of);
		soldier[i][j]-=many;
		if(player[i][j]=='G'){
			convert(df);
			player[i][j]='G';
		}
		else {
			convert(df);
			player[i][j]='R';
		}
		printon(player,soldier);
	}
	else if(one==two){
		printf("you cant attack yourself\n");
		printon(player,soldier);
	}
	else if(one!=two){
		do{
		printf("how many would you like to attack with?\n");
		scanf("%d",&many);
		}while(many<0);
		soldier[i][j]-=many;
		if(soldier[i][j]<0){
			player[i][j]=one;
			soldier[i][j]=abs(soldier[i][j]);
		}
		convert(of);
		soldier[i][j]-=many;
		printon(player,soldier);
	}
}

//checks if end of game
int check(void){
	int k=0,l=0;
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			if(player[i][j]=='G'){
				k++;
			}
		}
	}
	if (k==9){
		printf("nikise o GREEN\n");
		return 1;
	}
	else if (k==0){
		printf("nikise o RED\n");
		return 1;
	}
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			if(soldier[i][j]==0){
				l++;
			}
		}
	}
	if (l==9){
		printf("Isopalia\n");
		return 1;
	}
}
int main(void){
	makestart(player,soldier);
	do{
		do{
			printon(player,soldier);
			attack();
			if(check()==1){
				return 0;
			}
			printf("next round?");
			scanf("%d",&end);
		}while(end!=0);
		nextround();
	}while(1);
    return 0;
}
